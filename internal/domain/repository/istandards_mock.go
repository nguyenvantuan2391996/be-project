// Code generated by MockGen. DO NOT EDIT.
// Source: istandards.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	model "github.com/nguyenvantuan2391996/be-project/internal/domain/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIStandardRepositoryInterface is a mock of IStandardRepositoryInterface interface.
type MockIStandardRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIStandardRepositoryInterfaceMockRecorder
}

// MockIStandardRepositoryInterfaceMockRecorder is the mock recorder for MockIStandardRepositoryInterface.
type MockIStandardRepositoryInterfaceMockRecorder struct {
	mock *MockIStandardRepositoryInterface
}

// NewMockIStandardRepositoryInterface creates a new mock instance.
func NewMockIStandardRepositoryInterface(ctrl *gomock.Controller) *MockIStandardRepositoryInterface {
	mock := &MockIStandardRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockIStandardRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStandardRepositoryInterface) EXPECT() *MockIStandardRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateStandard mocks base method.
func (m *MockIStandardRepositoryInterface) CreateStandard(ctx context.Context, standard *model.Standard) (*model.Standard, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStandard", ctx, standard)
	ret0, _ := ret[0].(*model.Standard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStandard indicates an expected call of CreateStandard.
func (mr *MockIStandardRepositoryInterfaceMockRecorder) CreateStandard(ctx, standard interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStandard", reflect.TypeOf((*MockIStandardRepositoryInterface)(nil).CreateStandard), ctx, standard)
}

// DeleteStandardByQueries mocks base method.
func (m *MockIStandardRepositoryInterface) DeleteStandardByQueries(ctx context.Context, queries map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStandardByQueries", ctx, queries)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStandardByQueries indicates an expected call of DeleteStandardByQueries.
func (mr *MockIStandardRepositoryInterfaceMockRecorder) DeleteStandardByQueries(ctx, queries interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStandardByQueries", reflect.TypeOf((*MockIStandardRepositoryInterface)(nil).DeleteStandardByQueries), ctx, queries)
}

// GetStandardByQueries mocks base method.
func (m *MockIStandardRepositoryInterface) GetStandardByQueries(ctx context.Context, queries map[string]interface{}) ([]*model.Standard, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStandardByQueries", ctx, queries)
	ret0, _ := ret[0].([]*model.Standard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStandardByQueries indicates an expected call of GetStandardByQueries.
func (mr *MockIStandardRepositoryInterfaceMockRecorder) GetStandardByQueries(ctx, queries interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStandardByQueries", reflect.TypeOf((*MockIStandardRepositoryInterface)(nil).GetStandardByQueries), ctx, queries)
}
